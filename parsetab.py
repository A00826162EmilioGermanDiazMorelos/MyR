
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocLESS_THANMORE_THANEQUAL_TOleftPLUSMINUSleftMULTDIVrightUMINUSAND CHAR COMA DIV DO ELSE EQUALS EQUAL_TO FLOT FOR FUNCTION ID IF INT LEFTCURLY LEFTPAREN LEFTSQUARE LESS_THAN MAIN MINUS MORE_THAN MULT NUMBER OR PLUS PROGRAM PUNT_COMA READ RETURN RIGHTCURLY RIGHTPAREN RIGHTSQUARE THEN TO VARS VOID WHILE WRITEprogram : PROGRAM ID PUNT_COMA vars function MAIN blockvars : VARS var_list\n            | emptyvar_list : var_list COMA var\n                | var PUNT_COMAvar : type ID\n           | type LEFTSQUARE NUMBER RIGHTSQUARE IDtype : INT\n            | FLOT\n            | CHAR\n            | VOIDempty :function : FUNCTION type ID LEFTPAREN param_list RIGHTPAREN vars blockparam_list : param_list COMA param\n                  | param\n                  | emptyparam : INT ID\n             | FLOT ID\n             | CHAR IDblock : LEFTCURLY statement_list RIGHTCURLYstatement_list : statement_list statement\n                      | statementstatement : assignment\n                 | function_call\n                 | return_statement\n                 | read_statement\n                 | write_statement\n                 | decision_statement\n                 | repetition_statement\n                 | varsassignment : ID EQUALS expr PUNT_COMA\n                  | ID LEFTSQUARE expr RIGHTSQUARE EQUALS expr PUNT_COMAfunction_call : ID LEFTPAREN arg_list RIGHTPAREN PUNT_COMA\n                     | ID LEFTPAREN RIGHTPAREN PUNT_COMAarg_list : arg_list COMA expr\n                | exprreturn_statement : RETURN expr PUNT_COMA\n                        | RETURN PUNT_COMAread_statement : READ LEFTPAREN ID RIGHTPAREN PUNT_COMAwrite_statement : WRITE LEFTPAREN expr RIGHTPAREN PUNT_COMA\n                       | WRITE LEFTPAREN RIGHTPAREN PUNT_COMAdecision_statement : IF LEFTPAREN expr RIGHTPAREN THEN block\n                          | IF LEFTPAREN expr RIGHTPAREN THEN block ELSE blockrepetition_statement : FOR ID EQUALS expr TO expr DO block\n                            | WHILE LEFTPAREN expr RIGHTPAREN DO blockexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr MULT expr\n            | expr DIV expr\n            | expr AND expr\n            | expr OR expr\n            | expr LESS_THAN expr\n            | expr MORE_THAN expr\n            | expr EQUAL_TO expr\n            | LEFTPAREN expr RIGHTPAREN\n            | MINUS expr %prec UMINUS\n            | NUMBER\n            | ID'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,23,47,],[0,-1,-20,]),'ID':([2,7,10,12,13,14,15,16,18,20,21,24,26,28,29,30,31,32,33,34,35,36,37,39,43,46,47,48,49,50,51,53,54,55,58,59,60,62,66,67,68,69,75,76,77,78,79,80,81,82,83,84,91,98,101,102,115,121,122,124,125,127,131,133,134,137,138,],[3,-3,-2,21,-8,-9,-10,-11,25,-5,-6,38,-4,38,-22,-23,-24,-25,-26,-27,-28,-29,-30,57,61,69,-20,-21,57,57,57,-38,57,57,87,57,57,57,95,96,97,-7,-37,57,57,57,57,57,57,57,57,57,57,-31,57,-34,-41,57,-33,-39,-40,57,-42,-45,-32,-43,-44,]),'PUNT_COMA':([3,11,21,39,52,56,57,69,70,73,85,89,100,103,104,105,106,107,108,109,110,111,112,113,114,130,],[4,20,-6,53,75,-57,-58,-7,98,102,-56,115,122,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,124,125,134,]),'VARS':([4,7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,93,98,102,115,122,124,125,131,133,134,137,138,],[6,-3,-2,-5,-6,6,-4,6,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,6,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'FUNCTION':([4,5,7,10,20,21,26,69,],[-12,9,-3,-2,-5,-6,-4,-7,]),'INT':([6,9,19,45,94,],[13,13,13,66,66,]),'FLOT':([6,9,19,45,94,],[14,14,14,67,67,]),'CHAR':([6,9,19,45,94,],[15,15,15,68,68,]),'VOID':([6,9,19,],[16,16,16,]),'RIGHTCURLY':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,-12,-4,47,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'RETURN':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,39,-4,39,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'READ':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,40,-4,40,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'WRITE':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,41,-4,41,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'IF':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,42,-4,42,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'FOR':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,43,-4,43,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'WHILE':([7,10,20,21,24,26,28,29,30,31,32,33,34,35,36,37,47,48,53,69,75,98,102,115,122,124,125,131,133,134,137,138,],[-3,-2,-5,-6,44,-4,44,-22,-23,-24,-25,-26,-27,-28,-29,-30,-20,-21,-38,-7,-37,-31,-34,-41,-33,-39,-40,-42,-45,-32,-43,-44,]),'LEFTCURLY':([7,10,17,20,21,26,69,93,119,126,128,135,136,],[-3,-2,24,-5,-6,-4,-7,-12,24,24,24,24,24,]),'MAIN':([8,47,129,],[17,-20,-13,]),'COMA':([10,20,21,26,45,56,57,63,64,65,69,72,74,85,95,96,97,103,104,105,106,107,108,109,110,111,112,120,123,],[19,-5,-6,-4,-12,-57,-58,94,-15,-16,-7,101,-36,-56,-17,-18,-19,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-14,-35,]),'LEFTSQUARE':([12,13,14,15,16,38,],[22,-8,-9,-10,-11,50,]),'NUMBER':([22,39,49,50,51,54,55,59,60,62,76,77,78,79,80,81,82,83,84,91,101,121,127,],[27,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LEFTPAREN':([25,38,39,40,41,42,44,49,50,51,54,55,59,60,62,76,77,78,79,80,81,82,83,84,91,101,121,127,],[45,51,55,58,59,60,62,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RIGHTSQUARE':([27,56,57,71,85,103,104,105,106,107,108,109,110,111,112,],[46,-57,-58,99,-56,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,]),'EQUALS':([38,61,99,],[49,91,121,]),'MINUS':([39,49,50,51,52,54,55,56,57,59,60,62,70,71,74,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,101,103,104,105,106,107,108,109,110,111,112,117,121,123,127,130,132,],[54,54,54,54,77,54,54,-57,-58,54,54,54,77,77,77,54,54,54,54,54,54,54,54,54,-56,77,77,77,54,77,54,-46,-47,-48,-49,77,77,77,77,77,-55,77,54,77,54,77,77,]),'RIGHTPAREN':([45,51,56,57,59,63,64,65,72,74,85,86,87,88,90,92,95,96,97,103,104,105,106,107,108,109,110,111,112,120,123,],[-12,73,-57,-58,89,93,-15,-16,100,-36,-56,112,113,114,116,118,-17,-18,-19,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-14,-35,]),'ELSE':([47,131,],[-20,135,]),'PLUS':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[76,-57,-58,76,76,76,-56,76,76,76,76,-46,-47,-48,-49,76,76,76,76,76,-55,76,76,76,76,]),'MULT':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[78,-57,-58,78,78,78,-56,78,78,78,78,78,78,-48,-49,78,78,78,78,78,-55,78,78,78,78,]),'DIV':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[79,-57,-58,79,79,79,-56,79,79,79,79,79,79,-48,-49,79,79,79,79,79,-55,79,79,79,79,]),'AND':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[80,-57,-58,80,80,80,-56,80,80,80,80,-46,-47,-48,-49,-50,80,-52,-53,-54,-55,80,80,80,80,]),'OR':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[81,-57,-58,81,81,81,-56,81,81,81,81,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,81,81,81,81,]),'LESS_THAN':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[82,-57,-58,82,82,82,-56,82,82,82,82,-46,-47,-48,-49,82,82,None,None,None,-55,82,82,82,82,]),'MORE_THAN':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[83,-57,-58,83,83,83,-56,83,83,83,83,-46,-47,-48,-49,83,83,None,None,None,-55,83,83,83,83,]),'EQUAL_TO':([52,56,57,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,112,117,123,130,132,],[84,-57,-58,84,84,84,-56,84,84,84,84,-46,-47,-48,-49,84,84,None,None,None,-55,84,84,84,84,]),'TO':([56,57,85,103,104,105,106,107,108,109,110,111,112,117,],[-57,-58,-56,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,127,]),'DO':([56,57,85,103,104,105,106,107,108,109,110,111,112,118,132,],[-57,-58,-56,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,128,136,]),'THEN':([116,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,24,28,93,],[5,37,37,119,]),'empty':([4,24,28,45,93,],[7,7,7,65,7,]),'function':([5,],[8,]),'var_list':([6,],[10,]),'var':([6,19,],[11,26,]),'type':([6,9,19,],[12,18,12,]),'block':([17,119,126,128,135,136,],[23,129,131,133,137,138,]),'statement_list':([24,],[28,]),'statement':([24,28,],[29,48,]),'assignment':([24,28,],[30,30,]),'function_call':([24,28,],[31,31,]),'return_statement':([24,28,],[32,32,]),'read_statement':([24,28,],[33,33,]),'write_statement':([24,28,],[34,34,]),'decision_statement':([24,28,],[35,35,]),'repetition_statement':([24,28,],[36,36,]),'expr':([39,49,50,51,54,55,59,60,62,76,77,78,79,80,81,82,83,84,91,101,121,127,],[52,70,71,74,85,86,88,90,92,103,104,105,106,107,108,109,110,111,117,123,130,132,]),'param_list':([45,],[63,]),'param':([45,94,],[64,120,]),'arg_list':([51,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNT_COMA vars function MAIN block','program',7,'p_program','main.py',98),
  ('vars -> VARS var_list','vars',2,'p_vars','main.py',109),
  ('vars -> empty','vars',1,'p_vars','main.py',110),
  ('var_list -> var_list COMA var','var_list',3,'p_var_list','main.py',114),
  ('var_list -> var PUNT_COMA','var_list',2,'p_var_list','main.py',115),
  ('var -> type ID','var',2,'p_var','main.py',124),
  ('var -> type LEFTSQUARE NUMBER RIGHTSQUARE ID','var',5,'p_var','main.py',125),
  ('type -> INT','type',1,'p_type','main.py',134),
  ('type -> FLOT','type',1,'p_type','main.py',135),
  ('type -> CHAR','type',1,'p_type','main.py',136),
  ('type -> VOID','type',1,'p_type','main.py',137),
  ('empty -> <empty>','empty',0,'p_empty','main.py',141),
  ('function -> FUNCTION type ID LEFTPAREN param_list RIGHTPAREN vars block','function',8,'p_function','main.py',147),
  ('param_list -> param_list COMA param','param_list',3,'p_param_list','main.py',151),
  ('param_list -> param','param_list',1,'p_param_list','main.py',152),
  ('param_list -> empty','param_list',1,'p_param_list','main.py',153),
  ('param -> INT ID','param',2,'p_param','main.py',165),
  ('param -> FLOT ID','param',2,'p_param','main.py',166),
  ('param -> CHAR ID','param',2,'p_param','main.py',167),
  ('block -> LEFTCURLY statement_list RIGHTCURLY','block',3,'p_block','main.py',174),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','main.py',178),
  ('statement_list -> statement','statement_list',1,'p_statement_list','main.py',179),
  ('statement -> assignment','statement',1,'p_statement','main.py',186),
  ('statement -> function_call','statement',1,'p_statement','main.py',187),
  ('statement -> return_statement','statement',1,'p_statement','main.py',188),
  ('statement -> read_statement','statement',1,'p_statement','main.py',189),
  ('statement -> write_statement','statement',1,'p_statement','main.py',190),
  ('statement -> decision_statement','statement',1,'p_statement','main.py',191),
  ('statement -> repetition_statement','statement',1,'p_statement','main.py',192),
  ('statement -> vars','statement',1,'p_statement','main.py',193),
  ('assignment -> ID EQUALS expr PUNT_COMA','assignment',4,'p_assignment','main.py',199),
  ('assignment -> ID LEFTSQUARE expr RIGHTSQUARE EQUALS expr PUNT_COMA','assignment',7,'p_assignment','main.py',200),
  ('function_call -> ID LEFTPAREN arg_list RIGHTPAREN PUNT_COMA','function_call',5,'p_function_call','main.py',211),
  ('function_call -> ID LEFTPAREN RIGHTPAREN PUNT_COMA','function_call',4,'p_function_call','main.py',212),
  ('arg_list -> arg_list COMA expr','arg_list',3,'p_arg_list','main.py',221),
  ('arg_list -> expr','arg_list',1,'p_arg_list','main.py',222),
  ('return_statement -> RETURN expr PUNT_COMA','return_statement',3,'p_return_statement','main.py',233),
  ('return_statement -> RETURN PUNT_COMA','return_statement',2,'p_return_statement','main.py',234),
  ('read_statement -> READ LEFTPAREN ID RIGHTPAREN PUNT_COMA','read_statement',5,'p_read_statement','main.py',245),
  ('write_statement -> WRITE LEFTPAREN expr RIGHTPAREN PUNT_COMA','write_statement',5,'p_write_statement','main.py',251),
  ('write_statement -> WRITE LEFTPAREN RIGHTPAREN PUNT_COMA','write_statement',4,'p_write_statement','main.py',252),
  ('decision_statement -> IF LEFTPAREN expr RIGHTPAREN THEN block','decision_statement',6,'p_decision_statement','main.py',263),
  ('decision_statement -> IF LEFTPAREN expr RIGHTPAREN THEN block ELSE block','decision_statement',8,'p_decision_statement','main.py',264),
  ('repetition_statement -> FOR ID EQUALS expr TO expr DO block','repetition_statement',8,'p_repetition_statement','main.py',275),
  ('repetition_statement -> WHILE LEFTPAREN expr RIGHTPAREN DO block','repetition_statement',6,'p_repetition_statement','main.py',276),
  ('expr -> expr PLUS expr','expr',3,'p_expr','main.py',285),
  ('expr -> expr MINUS expr','expr',3,'p_expr','main.py',286),
  ('expr -> expr MULT expr','expr',3,'p_expr','main.py',287),
  ('expr -> expr DIV expr','expr',3,'p_expr','main.py',288),
  ('expr -> expr AND expr','expr',3,'p_expr','main.py',289),
  ('expr -> expr OR expr','expr',3,'p_expr','main.py',290),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr','main.py',291),
  ('expr -> expr MORE_THAN expr','expr',3,'p_expr','main.py',292),
  ('expr -> expr EQUAL_TO expr','expr',3,'p_expr','main.py',293),
  ('expr -> LEFTPAREN expr RIGHTPAREN','expr',3,'p_expr','main.py',294),
  ('expr -> MINUS expr','expr',2,'p_expr','main.py',295),
  ('expr -> NUMBER','expr',1,'p_expr','main.py',296),
  ('expr -> ID','expr',1,'p_expr','main.py',297),
]
